compositor_node InternalTextureNode
{
	texture internalTexture target_width target_height PFG_RGBA8_UNORM
	out 0 internalTexture
}

compositor_node HdrFinalLdrTextureNode
{
	texture resolveTexture target_width target_height PFG_RGBA8_UNORM_SRGB
	out 0 resolveTexture
}

compositor_node LdrRenderingNode
{
	texture rt0 target_width target_height PFG_RGBA16_FLOAT

	target rt0
	{
		pass render_scene
		{
			load
			{
				all				clear
				clear_colour	0.2 0.4 0.6 1
			}
			overlays	off
		}
	}
	
	out 0 rt0
}

compositor_node MixerOutput
{
	in 0 rt0
	in 1 internalTexture
	in 2 renderWindow
	
	target internalTexture
	{		
		pass render_quad
		{
			load { all dont_care }
			store
			{
				depth		dont_care
				stencil		dont_care
			}
			material	Ogre/Copy/MirrorY_and_sRGB
			input		0	rt0
		}
	}
	
	target renderWindow
	{		
		pass render_quad
		{
			load { all dont_care }
			store
			{
				depth		dont_care
				stencil		dont_care
			}
			material	Ogre/Copy/4xFP32
			input		0	rt0
		}
	}
}

workspace "DERGO Workspace"
{
	connect LdrRenderingNode	0	MixerOutput 0
	connect InternalTextureNode 0	MixerOutput 1
	connect_output					MixerOutput 2
}

workspace DergoHdrWorkspace
{
	connect HdrRenderingNode		0	HdrPostprocessingNode 0
	connect HdrRenderingNode		1	HdrPostprocessingNode 1
	connect HdrFinalLdrTextureNode	0	HdrPostprocessingNode 2
	connect	HdrPostprocessingNode	0	HdrRenderUi 0

	connect HdrRenderUi			0	MixerOutput 0
	connect InternalTextureNode 0	MixerOutput 1
	connect_output					MixerOutput 2
}

workspace DergoHdrWorkspaceMsaa
{
	connect HdrRenderingNode		0 HdrMsaaResolve 0
	connect HdrRenderingNode		1 HdrMsaaResolve 1
	connect HdrMsaaResolve			0 HdrPostprocessingNode 0
	connect HdrRenderingNode		1 HdrPostprocessingNode 1
	connect HdrFinalLdrTextureNode	0 HdrPostprocessingNode 2
	connect HdrPostprocessingNode	0 HdrRenderUi 0

	connect HdrRenderUi			0	MixerOutput 0
	connect InternalTextureNode 0	MixerOutput 1
	connect_output					MixerOutput 2
}
